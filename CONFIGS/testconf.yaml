config:
    version : 0.5
    comment : 'Info server pattern file'
    #homedir : ''
    homedir : '/etc/zabbix/log-parser/'
    hostname: bxcloudcompute01
    zbxhost : bxcloudcompute01.openstack.local_Log
    #zbxsrv  : zab01.booxdev.com
    zbxsrv  : 10.2.0.168

    # OpenStack configuration parameters
    ssh_key        : PCOFFICE
    nova_config    : /root/keystonerc_admin
    #instace_id     : f94cf847-5642-4e15-882e-ccdeb9a01fc8
    #instance_net   : net-id=382a3ebe-9360-4cdf-b3b6-988e46692435
    nova_config    : /root/keystonerc_admin
    instace_id     : 5b4042f9-b405-4798-99be-6c88352e274c
    instance_net   : net-id=382a3ebe-9360-4cdf-b3b6-988e46692435

    #instance_name  : test_openstack_compute01
    #instance_name  : test_compute01


commands:
    test1             : 'test'
    always_true       : 'true'
    always_false      : 'false'
    list              : 'ls -l %(folder)s'
    hostname          : 'echo %(hostname)s'
    getversion        : 'echo $LOGNAME %(version)s : %(comment)s'
    list              : 'ls -l %(folder)s'
    hostname          : 'echo %(hostname)s'
    getversion        : 'echo $LOGNAME %(version)s : %(comment)s'
    nova_list         : 'nova list'
    vm_exists         : '/bin/bash -c "nova list | grep %(instance_name)s'
    vm_not_exists     : '/bin/bash -c "! nova list | grep %(instance_name)s'
    vm_is_running     : '/bin/bash -c "nova list | grep %(instance_name)s | grep Running"'
    vm_is_stopped     : '/bin/bash -c "nova list | grep %(instance_name)s | grep Shutdown"'
    nova_stop_vm      : 'nova stop %(instance_name)s'
    nova_delete_vm    : 'nova delete %(instance_name)s'
    nova_delete_1st_vm  : /bin/bash -c "nova delete `nova list | grep %(instance_name)s | head -n1 | awk '{print $2}'`"
    nova_force_delete : 'nova force-delete %(instance_name)s'
    nova_force_delete_1st : '/bin/bash -c "nova force-delete `nova list | grep %(instance_name)s | head -n1 | cut -d" " -f2`"'
    nova_boot         : 'nova boot --image %(instace_id)s --flavor 2 --availability-zone nova:%(hostname)s --key-name %(ssh_key)s --nic %(instance_net)s "%(instance_name)s"'
    nova_log          : 'nova console-log %(instance_name)s'
    env               : 'env'
    output_grep       : /bin/bash -c "echo -e "%(lastOutput)s" | grep %(grep)s"
    output_nogrep     : /bin/bash -c "! echo -e "%(lastOutput)s" | grep %(grep)s"

# NEW ONES:
    nova_env          : /bin/bash -c "! [ -z $OS_USERNAME ]"




# List of test commands
test:
  # Parameters specific for that test
  config:
    ignoreerrors    : True
    folder          : './'
    errorlist       :
        - 1ExecCMD.py
        - drwxrwxrwx

  # List of execution lines
  execlist:
  - action  :
       cmd           : always_true
       retry_count   : 5
       retry_sleep   : 3
       ignore_errors : True
    print   :    always
    fallback:    getversion

  - action  :
       cmd           : list
    print   :    always

  - action  :
       cmd           : hostname
    fallback:    always_false

test2:
  config:
     ignoreerrors    : True
     folder          : '/aassa'

  execlist:
  -
   action      :
       cmd           : list
       retry_count   : 3
       retry_sleep   : 2
       print         : False
   print       :  always

  - action  :
       cmd           : always_true
       retry_count   : 5
       retry_sleep   : 3
       ignore_errors : True
    print   :    always
    fallback:    getversion

  - action  :
       cmd           : list
    print   :    always


#########################################
# Managing Compute 05

######################
# Create test VM.
# Verify that it is deployed successfuly
#####################
openstack_vm_create:
  # Parameters specific for that test
  config:
    id              : 10
    ignoreerrors    : False
    hostname        : bxcloudcompute%(id)s
    instance_name   : test_compute%(id)s

  # List of execution lines
  execlist:

  # Check that openstack key is imported (source ~/keystone_TENNANT)
  - action    : 
      cmd        : nova_env
      print      : True

  # Check that VM is not exists
  - action    :
      cmd        : nova_list
      print      : False
  - grep      :
      - -v
      - patterns       :
               - '%(instance_name)s'
  - print     :   onfail

  # Start VM
  - action    :
      cmd          : nova_boot
      print        : False
  - print     :   onfail
     
  # Check that VM appeared in list of VMs
  - action    :
      cmd          : nova_list
      print        : False
      retry_count  : 5
      retry_sleep  : 2
      failifnot    :
       - '%(instance_name)s'
  - print     :   onfail




######################
# Check that VM is running without any errors
# Verify that it is deployed correctly, in running state and has no errors in log console
#####################
openstack_vm_ok:
  # Parameters specific for that test
  config:
    id              : 10
    ignoreerrors    : False
    hostname        : bxcloudcompute%(id)s
    instance_name   : test_compute%(id)s

  # List of execution lines
  execlist:

  # Check that script has loaded environment variables to run openstack commands
  - action    : 
       cmd        : nova_env
       print      : True

  # Check that VM is deployed
  - action    :
      cmd        : nova_list
      print      : False

  - grep      :
#       - dont_fail
#       - -v
       - patterns       :
               - '%(instance_name)s'
  - print     :   onfail

  # Ensure that VM do not have errors in logs
  - action    :
      cmd        : nova_log
      retry_count   : 10
      retry_sleep   : 10
      print         : False
      failifnot  :
       - ' login:'
      failif:
       - ' ERROR:'
       - 'CRITICAL'



######################
# Delete existing VM
# Deletes VM. If that fails, tries to do force delete
#####################
openstack_vm_delete:
  # Parameters specific for that test
  config:
    id              : 10
    ignoreerrors    : False
    hostname        : bxcloudcompute%(id)s
    instance_name   : test_compute%(id)s

  # List of execution lines
  execlist:

  # Check that openstack key is imported (source ~/keystone_TENNANT)
  - action    : 
       cmd        : nova_env
       print      : True

  # Check that VM exists
  - action    :
       cmd        : nova_list
       print      : False

  # Check that VM exists
  - grep      :
#       - dont_fail
#       - -v
       - patterns       :
               - '%(instance_name)s'
  - print     :   onfail

  # Execute the delete command
  - action    :
      cmd        : nova_delete_vm
      retry_count   : 10
      retry_sleep   : 2
      print         : False

  # Check that VM disappeared
  - action    :
      cmd        : nova_list
      print      : False
      retry_count   : 10
      retry_sleep   : 3
      failif     :
       - '%(instance_name)s'
      fallback   : nova_force_delete_1st
  - print     :   onfail

